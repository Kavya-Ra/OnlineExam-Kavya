@model OnlineExam.ViewModel.DtpQAViewModel

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem { Text = "OptionA", Value = "Option 1" });
    listItems.Add(new SelectListItem { Text = "OptionB", Value = "Option 2" });
    listItems.Add(new SelectListItem { Text = "OptionC", Value = "Option 3" });
    listItems.Add(new SelectListItem { Text = "OptionD", Value = "Option 4" });
}

@{
    List<SelectListItem> ls = new List<SelectListItem>();
    for (int i = 2014; i <= 2099; i++)
    {
        ls.Add(new SelectListItem() { Text = i.ToString(), Value = i.ToString() });
    }
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-horizontal">
        <h4>DtpQAViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
                @Html.LabelFor(model => model.PrevQnYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PrevQnYear", ls, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrevQnYear, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PgmId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PgmId", null, "--Select Programme--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PgmId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SubPgmId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubPgmId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubPgmId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubjectId", null, "--Select Subject--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChapterId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ChapterId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ChapterId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Questions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Questions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Questions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectAns, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CorrectAns", listItems, "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CorrectAns, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "DataEntryQuestAnsList")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <!-- JS includes -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var subProgram = '@Url.Action("SubProgram")';
            var chapters = '@Url.Action("Chapters")';
            var SubPgmId = $('#SubPgmId');
            var ChapterId = $('#ChapterId');
            $('#PgmId').change(function () {
                SubPgmId.empty();
                $.getJSON(subProgram, { ID: $(this).val() }, function (data) {
                    if (!data) {
                        return;
                    }
                    SubPgmId.append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        SubPgmId.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            })

            $('#SubjectId').change(function () {
                ChapterId.empty();
                $.getJSON(chapters, { ID: $(this).val() }, function (data) {
                    if (!data) {
                        return;
                    }
                    ChapterId.append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        ChapterId.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            })
        });
    </script>
}

