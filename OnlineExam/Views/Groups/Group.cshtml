@model OnlineExam.ViewModel.GroupViewModel




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
<div class="form-horizontal">
    <h4>GroupViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PgmId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PgmId", null, "--Select Programme--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PgmId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubPgmId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubPgmId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubPgmId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClassId", null, "--Select Class--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubjectId", null, "--Select Subject--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TeacherId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TeacherId", null, "--Select Teacher--", htmlAttributes: new { @class = "form-control", @multiple = true })
            @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
        </div>
        @*<input type="hidden" id="teahersele" value="@Model.TeacherId" />*@
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownList("StudentId", null, "--Select Student--", htmlAttributes: new { @class = "form-control", @multiple = true })
            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <!-- JS includes -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var subProgram = '@Url.Action("SubProgram")';
            var chapters = '@Url.Action("Course")';
            var SubPgmId = $('#SubPgmId');
            var CourseId = $('#CourseId');
            $('#PgmId').change(function () {
                SubPgmId.empty();
                $.getJSON(subProgram, { ID: $(this).val() }, function (data) {
                    if (!data) {
                        return;
                    }
                    SubPgmId.append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        SubPgmId.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            })

            $('#ClassId').change(function () {
                CourseId.empty();
                $.getJSON(chapters, { ID: $(this).val() }, function (data) {
                    if (!data) {
                        return;
                    }
                    CourseId.append($('<option></option>').val('').text('Please select'));
                    $.each(data, function (index, item) {
                        CourseId.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            })
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#TeacherId").chosen();
            $("#StudentId").chosen();
        });
    </script>



    @*<script>
        $(document).ready(function () {
            var tid = $('#teahersele').val();
            $.each(tid, function (key, val) {
                $("#TeacherId").val(val).trigger("chosen:updated");
            });

            console.log(tid);
        });
    </script>*@
}

 